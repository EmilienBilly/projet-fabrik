{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emili\\\\documents\\\\Code\\\\projet-fabrik\\\\front-end\\\\src\\\\JobList.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, LayoutGroup } from \"framer-motion\";\nimport { useState, useEffect, useRef } from \"react\"; // Styled Components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledJobList = styled(motion.div)`\n    width: 70%;\n    min-height: 5rem;\n    display: flex;\n    color: white;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.$colorBackground};\n\n    h1 {\n        font-size: 1.2rem;\n        font-weight: 600;\n    }\n\n    @media (min-width: 768px) {\n        width: 90%;\n        padding: 0 8px;\n        h1 {\n            font-size: 0.8rem;\n        }\n    }\n\n    @media (min-width: 960px) {\n        h1 {\n            font-size: 1rem;\n        }\n    }\n`;\n_c = StyledJobList;\nconst StyledLink = styled(Link)`\n    text-decoration: none;\n    color: inherit;\n`;\n_c2 = StyledLink;\nconst StyledJobTitleWrapper = styled(motion.div)``;\n_c3 = StyledJobTitleWrapper;\nconst StyledJobTitle = styled(motion.h3)`\n    span {\n        font-size: 1rem;\n        border-bottom: 2px solid white;\n        background-size: 100% 3px;\n    }\n\n    @media (min-width: 768px) {\n        span {\n            font-size: 0.7rem;\n        }\n    }\n\n    @media (min-width: 960px) {\n        span {\n            font-size: 0.8rem;\n        }\n    }\n`;\n_c4 = StyledJobTitle;\nconst JobContainer = {\n  visible: {\n    opacity: 1,\n    x: 0,\n    transition: {\n      duration: 0.4,\n      // The first child will appear AFTER the parrent has appeared on the screen\n      delayChildren: 0.2,\n      // The next sibling will appear 0.5s after the previous one\n      staggerChildren: 0.3\n    }\n  },\n  hidden: {\n    opacity: 0,\n    x: -50\n  },\n  exit: {\n    opacity: 0\n  }\n};\nconst JobItems = {\n  hidden: {\n    opacity: 0,\n    x: -50\n  },\n  visible: {\n    opacity: 1,\n    x: 0\n  }\n};\n\nconst JobList = props => {\n  _s();\n\n  const jobs = props.jobs;\n  const title = props.title;\n  const linearGradient = props.linearGradient;\n  const colorBackground = props.colorBackground;\n  const [isOpen, setIsOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const checkIfClickedOutside = e => {\n      // Vérifie si le composant est ouvert et si la cible du clic n'est pas ce composant,\n      // alors le composant se ferme\n      if (isOpen && ref.current && !ref.current.contains(e.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", checkIfClickedOutside);\n    return () => {\n      // Cleanup l'event listener\n      document.removeEventListener(\"mousedown\", checkIfClickedOutside);\n    };\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(LayoutGroup, {\n    children: /*#__PURE__*/_jsxDEV(StyledJobList, {\n      transition: {\n        layout: {\n          duration: 1\n        }\n      },\n      style: {\n        borderRadius: \"30px\"\n      },\n      layout: true,\n      onClick: () => setIsOpen(!isOpen),\n      ref: ref,\n      $colorBackground: colorBackground,\n      children: [/*#__PURE__*/_jsxDEV(motion.h1, {\n        layout: true,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: isOpen && /*#__PURE__*/_jsxDEV(StyledJobTitleWrapper, {\n          layout: true,\n          animate: isOpen ? \"visible\" : \"hidden\",\n          variants: JobContainer,\n          initial: \"hidden\",\n          exit: \"exit\",\n          children: jobs.map(job => /*#__PURE__*/_jsxDEV(motion.div, {\n            layout: true,\n            variants: JobItems,\n            children: /*#__PURE__*/_jsxDEV(StyledLink, {\n              to: `/${job.title}`,\n              children: /*#__PURE__*/_jsxDEV(StyledJobTitle, {\n                $linearGradient: linearGradient,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this)\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobList, \"ToG9rmXF9WtAhZvt+b52CAy06So=\");\n\n_c5 = JobList;\nexport default JobList;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StyledJobList\");\n$RefreshReg$(_c2, \"StyledLink\");\n$RefreshReg$(_c3, \"StyledJobTitleWrapper\");\n$RefreshReg$(_c4, \"StyledJobTitle\");\n$RefreshReg$(_c5, \"JobList\");","map":{"version":3,"names":["Link","styled","motion","AnimatePresence","LayoutGroup","useState","useEffect","useRef","StyledJobList","div","props","$colorBackground","StyledLink","StyledJobTitleWrapper","StyledJobTitle","h3","JobContainer","visible","opacity","x","transition","duration","delayChildren","staggerChildren","hidden","exit","JobItems","JobList","jobs","title","linearGradient","colorBackground","isOpen","setIsOpen","ref","checkIfClickedOutside","e","current","contains","target","document","addEventListener","removeEventListener","layout","borderRadius","map","job","id"],"sources":["C:/Users/emili/documents/Code/projet-fabrik/front-end/src/JobList.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { motion, AnimatePresence, LayoutGroup } from \"framer-motion\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\n// Styled Components\r\nconst StyledJobList = styled(motion.div)`\r\n    width: 70%;\r\n    min-height: 5rem;\r\n    display: flex;\r\n    color: white;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: ${(props) => props.$colorBackground};\r\n\r\n    h1 {\r\n        font-size: 1.2rem;\r\n        font-weight: 600;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        width: 90%;\r\n        padding: 0 8px;\r\n        h1 {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n\r\n    @media (min-width: 960px) {\r\n        h1 {\r\n            font-size: 1rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n    text-decoration: none;\r\n    color: inherit;\r\n`;\r\n\r\nconst StyledJobTitleWrapper = styled(motion.div)``;\r\n\r\nconst StyledJobTitle = styled(motion.h3)`\r\n    span {\r\n        font-size: 1rem;\r\n        border-bottom: 2px solid white;\r\n        background-size: 100% 3px;\r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        span {\r\n            font-size: 0.7rem;\r\n        }\r\n    }\r\n\r\n    @media (min-width: 960px) {\r\n        span {\r\n            font-size: 0.8rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst JobContainer = {\r\n    visible: {\r\n        opacity: 1,\r\n        x: 0,\r\n        transition: {\r\n            duration: 0.4,\r\n            // The first child will appear AFTER the parrent has appeared on the screen\r\n            delayChildren: 0.2,\r\n            // The next sibling will appear 0.5s after the previous one\r\n            staggerChildren: 0.3,\r\n        },\r\n    },\r\n    hidden: { opacity: 0, x: -50 },\r\n    exit: { opacity: 0 },\r\n};\r\n\r\nconst JobItems = {\r\n    hidden: { opacity: 0, x: -50 },\r\n    visible: { opacity: 1, x: 0 },\r\n};\r\n\r\nconst JobList = (props) => {\r\n    const jobs = props.jobs;\r\n    const title = props.title;\r\n    const linearGradient = props.linearGradient;\r\n    const colorBackground = props.colorBackground;\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        const checkIfClickedOutside = (e) => {\r\n            // Vérifie si le composant est ouvert et si la cible du clic n'est pas ce composant,\r\n            // alors le composant se ferme\r\n            if (isOpen && ref.current && !ref.current.contains(e.target)) {\r\n                setIsOpen(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"mousedown\", checkIfClickedOutside);\r\n\r\n        return () => {\r\n            // Cleanup l'event listener\r\n            document.removeEventListener(\"mousedown\", checkIfClickedOutside);\r\n        };\r\n    }, [isOpen]);\r\n\r\n    return (\r\n        <LayoutGroup>\r\n            <StyledJobList\r\n                transition={{ layout: { duration: 1 } }}\r\n                style={{ borderRadius: \"30px\" }}\r\n                layout\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                ref={ref}\r\n                $colorBackground={colorBackground}>\r\n                <motion.h1 layout>{title}</motion.h1>\r\n                <AnimatePresence>\r\n                    {isOpen && (\r\n                        <StyledJobTitleWrapper layout animate={isOpen ? \"visible\" : \"hidden\"} variants={JobContainer} initial=\"hidden\" exit=\"exit\">\r\n                            {jobs.map((job) => (\r\n                                <motion.div layout variants={JobItems} key={job.id}>\r\n                                    <StyledLink to={`/${job.title}`}>\r\n                                        <StyledJobTitle $linearGradient={linearGradient}>\r\n                                            <span>{job.title}</span>\r\n                                        </StyledJobTitle>\r\n                                    </StyledLink>\r\n                                </motion.div>\r\n                            ))}\r\n                        </StyledJobTitleWrapper>\r\n                    )}\r\n                </AnimatePresence>\r\n            </StyledJobList>\r\n        </LayoutGroup>\r\n    );\r\n};\r\n\r\nexport default JobList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}